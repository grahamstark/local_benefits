-- Sample project file; you'll need to modify this heavily. Should ultimately
-- live in the root dir of the project
--
-- Created by ada_generator.py on 2012-06-25 12:24:16.729647
-- 
with "aunit";
with "gnatcoll";
with "tb_2012.gpr";

project LABens is

   type Op_Type is ( "std", "asis", "optimised", "none" );
   op : Op_Type := external( "OP", "std" );
   for Languages use( "Ada" );

   for Languages use ("Ada");
   for Source_Dirs use ("src/**", "tests/", "/opt/ada_libraries/gnade/**" );
   for Object_Dir use "bin/";
   for Main use ("harness.adb", "la_server.adb" );
      
   Includeopt := ("-gnat2012");
   Libopt := "";
   AsisOpts := (  "-gnatc", "-gnatt" );
   OptimisedOpts := ( "-gnatp", "-O3", "-fomit-frame-pointer", "-lpthread", "-funroll-loops" );
   SimpleOpts := ( "" );
   
   for Exec_Dir use "bin/";
   for Object_Dir use "bin/";

   -- "-ftest-coverage", "-lcrypto", "-lssl", "-llapack" ); -- last of these is lapack maths,

   package Linker is
      for Linker_Options use (GnatColl.Postgres_Path, "-lpq", "-lgnatcoll_postgres" );
      for Default_Switches ("ada") use ( "-g", "-ftest-coverage" ); -- ,
   end Linker;

   package Pretty_Printer is
      for Default_Switches ("ada") use ("-M140", "-l3");
   end Pretty_Printer;

   package Binder is
      for Default_Switches ("ada") use ("-static", "-E" ); --, "-d500m" , "-D500m"); -- stack at exceptions, list restrictions, static linking
   end Binder;

   package Compiler is
      case op is
         when "std" =>
            for Default_Switches ( "ada" ) use IncludeOPT & ( "-g", "-gnato", "-E", "-fstack-check");
         when "none" =>
            for Default_Switches ( "ada" ) use IncludeOPT & SimpleOpts;
         when "asis" =>
            for Default_Switches ( "ada" ) use IncludeOPT & AsisOpts;
         when "optimised" =>
            for Default_Switches ( "ada" ) use IncludeOPT & OptimisedOpts;
      end case;
   end Compiler;

   package Builder is
      for Default_Switches ("ada")
      use  IncludeOPT & ("-g", "-gnatQ", "-x",  "-E" );
    end Builder;
    
end LABens;
